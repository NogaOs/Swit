git init:
יוצר ריפו לוקאלי בתיקיית העבודה הנוכחית.

git add:
בתוך הריפו ישנה תיקייה המכונה staging area, או אינדקס. תיקייה זו מכילה את כל הקבצים אשר יתווספו ל-"תמונה" בפעם הבאה שיתבצע קומיט. באמצעות add המשתמש יכול להעביר קבצים מהתיקייה "האמיתית" אל אינדקס.

git commit:
פקודה זו לוקחת "תמונה" של המצב הנוכחי באינדקס.כל תוכן התיקייה אינדקקס יועתק אל תיקייה אחרת, הנמצאת בתוך תיקיית images. לכל תיקייה יש hash משלה, באמצעותו ניתן לגשת אליה.

git status:
פקודה פשוטה המציגה לאילו קבצים נעשה add מאז הקומיט האחרון, לאילו קבצים יש תוכן שונה בתיקייה המקורית ובאינדקס, ולאילו קבצים לא נעשה add. 

git checkout:
פעולה זו מאפשרת למשתמש לחזור אל אחד הקומיטים הקודמים שביצע. בעת בחירת brnachname או hash (?), יועתק תוכן תיקיית הקומיט אל התיקייה המקורית.
הרחבה: באמצעות git checkout -b <branchname>, ניתן ליצור ענף חדש וגם לעשות אליו צ'קאאוט.

git branch:
כל ענף הוא pointer לקומיט מסויים שנעשה. הפקודה הזו יוצרת שם נוסף לקומיט הנוכחי (ולא שום דבר מעבר לזה).

git reset:
פקודה זו דומה לצ'קאאוט, אבל היא בהכרח תזיז את כל המצביענים אל הקומיט הנבחר.
ישנם שלושה שלבים של ריסט:
-- רך: רק יזיז את המצביענים, אך לא יעשה שום שינוי מעבר לכך.
-- מעורב: זוהי האפשרות הדיפולטית. תוכן הקומיט הנבחר יועתק אל האינדקס ואל הריפו; אם יש changes to be committed, הם יועתקו אל הריפו.
-- קשוח: זו האופציה המסוכנת ביותר. לאחר ביצוע הפקודה הזו, תוכן האינדקס והתיקייה המקורית יוחלף לחלוטין בתוכן הקומיט הרצוי. כל מידע שלא קומט ייאבד.

git revert:
משתמשים בפקודה זו כאשר רוצים לעשות undo לקומיט מסויים. הפקודה הזו היא עדינה יחסית, כיוון שהיא לא לא נוגעת באף אחד מהמצביענים. ע"מ לא לאבד אף מידע, הפקודה תוריד את כל השינויים שהתבצעו בקומיט האחרון (באמצעות קסם), ותיצור קומיט חדש בשם revert commit, אשר, כאמור, אף אחד לא יצביע עליו ( :( ). זו פעולה טובה אם נרצה לבדוק האם קומיט מסויים גרם לבאג (כיוון שאם לא, תמיד נוכל לחזור אליו ושום דבר לא יימחק או ישתנה).

git diff:
פקודה זו מוצאת את ההבדלים בין שתי ישויות מאותו הסוג - קבצים, קומיטים, ברנצ'ים, ועוד.

git rm:
בהינתן נתיב, מוחק את הקובץ או התיקייה מהאינדקס.
--cached:
הנתיב יימחק רק מתיקיית העבודה המקורית, ולא מהאינדקס.
--ignore-unmatch:
אם הקובץ לא נמצא, מחזיר 0 (כנראה במקום להקפיץ שגיאה).
-q
--quiet:
בד"כ קופצת הודעה. זה משתיק את ההודעה הזו.

git tag:
הוספת "כותרת" לקומיט מסויים. התיוג יישאר על הקומיט הספציפי ולא יזוז ממנו. ניתן גם לבצע תיוג אוחר.

git log:
הפעולה git log מציגה את היסטוריית ה־commit־ים ב־repo. שימוש מעניין בפקודה הוא שאפשר לספק לה את הדגל --oneline, שבמקום להביא את המידע המלא על כל commit מביא את ה־id המקוצר של ה־commit, את ההודעה של ה־commit ואת הענף אליו הוא שייך.

git merge:
בשימוש הנפוץ ביותר, פונקציה זו תשלב בין שני ענפים. קומיט חדש ייווצר, ובו כל השינויים שנערכו בין שני הענפים מהרגע שפוצלו.
לפני הפעולה, תתבצע בדיקה כי HEAD מצביע על האימג' הנכון (באמצעות סטטוס).
הפעולה יכולה להתבצע לא בהכרח על ענפים, אלא על כל image שנוצר בכל דרך.